@model RepositorioClases.Events

@{
    ViewBag.Title = "Eventos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />

<div class="card hoverable">
    <div class="card-content">
        @using (Html.BeginForm("Create", "Events", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="input-field">
                    <i class="material-icons prefix">label</i>
                    @Html.EditorFor(model => model.NombreEvento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.NombreEvento)
                    @Html.ValidationMessageFor(model => model.NombreEvento, "", new { @class = "text-danger" })
                </div>

                <div class="input-field">
                    <i class="material-icons prefix">description</i>
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Descripcion)
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>

                <div class="input-field">
                    <i class="material-icons prefix">location_on</i>
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Direccion)
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>

                <div class="row">
                    <div class="input-field col s6">
                        @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "active" })
                        @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "datepicker" } })
                        @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                    </div>
                    <div class="input-field col s6">
                        <input class="text-box single-line col-2" id="HoraInicio" name="HoraInicio" type="time" value="12:00" />
                        <label for="last_name" class="active">Hora inicio</label>
                    </div>
                </div>

                <div class="row">
                    <div class="input-field col s6">
                        @Html.LabelFor(model => model.FechaFin, htmlAttributes: new { @class = "active" })
                        @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "datepicker" } })
                        @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                    </div>
                    <div class="input-field col s6">
                        <input class="text-box single-line col-2" id="HoraFin" name="HoraFin" type="time" value="12:00" />
                        <label for="last_name" class="active">Hora fin</label>
                    </div>
                </div>

                @Html.EnumDropDownListFor(model => model.IdCategoria, null, new { @class = "form-control" })

                <div class="form-group">
                    @Html.CheckBoxFor(m => m.Destacado, new { @type = "checkbox", @id = "Destacado", @name = "Destacado" })
                    <label for="Destacado">Evento destacado</label>
                </div>

                <!--Script para los checkbox-->
                <script>
                    $(document).ready(function () {
                        $('input[type=checkbox]').each(function () {
                            if (this.nextSibling.nodeName != 'label') {
                                $(this).after('<label for="' + this.id + '"></label>')
                            }
                        })
                    })</script>
                <!--Script para los datepicker-->
                <script>
                    $('.datepicker').pickadate({
                        selectMonths: true, // Creates a dropdown to control month
                        selectYears: 15 // Creates a dropdown of 15 years to control year
                    });</script>

                <blockquote>Arrastre el marcador hacia la ubicación del evento</blockquote>

                <div id="map" style="width:100%;height:600px;"></div>

                <!--Script para mapas-->
                <script>
                    // Note: This example requires that you consent to location sharing when
                    // prompted by your browser. If you see the error "The Geolocation service
                    // failed.", it means you probably did not give permission for the browser to
                    // locate you.

                    function initMap() {

                        var map = new google.maps.Map(document.getElementById('map'), {
                            center: { lat: -30.94520, lng: -61.56056 },
                            zoom: 14
                        });

                        var infoWindow = new google.maps.InfoWindow({ map: map });


                        var myMarker = new google.maps.Marker({
                            position: new google.maps.LatLng(-30.94520, -61.56056),
                            draggable: true
                        });

                        map.setCenter(myMarker.position);
                        myMarker.setMap(map);

                        $('#lat').val(-30.94520);
                        $('#lng').val(-61.56056);

                        //-----------------------------------------------------------------------


                        google.maps.event.addListener(myMarker, 'dragend', function (evt) {
                            $('#lat').val(evt.latLng.lat().toFixed(5));
                            $('#lng').val(evt.latLng.lng().toFixed(5));
                        });

                        //-----------------------------------------------------------------------
                    }
                    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                        infoWindow.setPosition(pos);
                        infoWindow.setContent(browserHasGeolocation ?
                            'Error: The Geolocation service failed.' :
                            'Error: Your browser doesn\'t support geolocation.');
                    }

                </script>

                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBPHbsGCp8vpDA1vMKAFWsU0Odc8Mz5SAA&callback=initMap" async defer></script>

                <div class="md-form col-md-2">
                    @Html.EditorFor(model => model.lat, new { htmlAttributes = new { @class = "form-control", @id = "lat", @readonly = "readonly", @hidden = true } })
                    @Html.ValidationMessageFor(model => model.lat, "", new { @class = "text-danger" })
                </div>


                <div class="md-form col-md-2">
                    @Html.EditorFor(model => model.lng, new { htmlAttributes = new { @class = "form-control", @id = "lng", @readonly = "readonly", @hidden = true } })
                    @Html.ValidationMessageFor(model => model.lng, "", new { @class = "text-danger" })
                </div>

                <br />
                <label for="file">Imagen del evento: </label>
                <input type="file" name="file" id="file" />

                <br />
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 align-center">
                        <input type="submit" value="Crear" class="btn btn-primary" />
                    </div>
                </div>

            </div>
                <!--Script para dropdown-->
                <script>
                    $(document).ready(function () {
                        $('select').material_select();
                    });</script>
        }

        <div class="right-align">
            @Html.ActionLink("Volver", "Index")
        </div>
